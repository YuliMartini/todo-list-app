{"version":3,"sources":["components/images/check-list.png","components/todoItem.js","components/addTodo.js","components/todoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","className","type","defaultChecked","this","props","todo","completed","onChange","completedItem","renderItem","icon","onClick","deleteItem","id","value","React","Component","AddTodo","state","addTodoValue","handleChange","e","setState","target","clearInput","document","getElementById","addItem","preventDefault","trim","onSubmit","placeholder","library","add","faTimesCircle","TodoList","handleDelete","todos","filter","item","addNewTodo","some","Swal","fire","title","text","push","Date","now","handleCompleted","map","listItems","src","logo","alt","duration","easing","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1feed007.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/check-list.e5289047.png\";","import React from \"react\";\r\nimport \"./todoItem.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass TodoItem extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"list-container\">\r\n          <ul className=\"todo-list\">\r\n            <li>\r\n              <label className=\"check-container\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  defaultChecked={this.props.todo.completed}\r\n                  onChange={() => this.props.completedItem(this.props.todo)}\r\n                />\r\n                <span className=\"checkmark\"></span>\r\n                <p>{this.renderItem()}</p>\r\n              </label>\r\n              <button className=\"icon-button\">\r\n                <FontAwesomeIcon\r\n                  className=\"fawicon\"\r\n                  icon=\"times-circle\"\r\n                  onClick={() => this.props.deleteItem(this.props.todo.id)}\r\n                />\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderItem() {\r\n    if (this.props.todo.completed) {\r\n      return <s>{this.props.todo.value}</s>;\r\n    } else return this.props.todo.value;\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport \"./addTodo.css\";\r\n\r\nclass AddTodo extends React.Component {\r\n  state = {\r\n    value: this.props.addTodoValue,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  clearInput = () => {\r\n    document.getElementById(\"inputValue\").value = \"\";\r\n    this.setState({ value: \"\" });\r\n  };\r\n\r\n  addItem = (e) => {\r\n    e.preventDefault();\r\n    this.props.addItem(this.state.value.trim());\r\n    this.clearInput();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <section className=\"add-task\">\r\n          <form id=\"form\" onSubmit={this.addItem}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter new task...\"\r\n              id=\"inputValue\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <button type=\"button\" onClick={this.addItem}>\r\n              Add\r\n            </button>\r\n          </form>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\nimport \"./todoList.css\";\r\nimport logo from \"./images/check-list.png\";\r\nimport TodoItem from \"./todoItem\";\r\nimport AddTodo from \"./addTodo\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nlibrary.add(faTimesCircle);\r\n\r\nclass TodoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addTodoValue: \"\",\r\n      todos: [\r\n        {\r\n          id: 0,\r\n          value: \"\",\r\n          completed: false,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  handleDelete = (todo) => {\r\n    const todos = this.state.todos.filter((item) => {\r\n      return item.id !== todo;\r\n    });\r\n    this.setState({ todos });\r\n  };\r\n\r\n  addNewTodo = (value) => {\r\n    if (value) {\r\n      const todos = [...this.state.todos];\r\n      if (!todos.some((item) => item.value === value)) {\r\n        todos.push({\r\n          id: Date.now(),\r\n          value: value,\r\n          completed: false,\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"That task already exists!\",\r\n        });\r\n      }\r\n      this.setState({ addTodoValue: \"\", todos });\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Uh uh...\",\r\n        text: \"You need to write something!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCompleted = (todo) => {\r\n    const todos = [...this.state.todos];\r\n    todos.map((item) => {\r\n      if (item.id === todo.id) {\r\n        item.completed = !item.completed;\r\n      }\r\n      return item;\r\n    });\r\n    this.setState({ todos });\r\n  };\r\n\r\n  render() {\r\n    const items = this.state.todos;\r\n    const listItems = items.map((todo) => {\r\n      if (todo.id === 0) {\r\n        return null;\r\n      } else\r\n        return (\r\n          <TodoItem\r\n            todo={todo}\r\n            deleteItem={this.handleDelete}\r\n            completedItem={this.handleCompleted}\r\n            key={todo.id}\r\n          />\r\n        );\r\n    });\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"title\">\r\n          <img src={logo} alt=\"\" />\r\n          <h3>My TODO List</h3>\r\n        </header>\r\n        <AddTodo\r\n          addItem={this.addNewTodo}\r\n          addTodoValue={this.state.addTodoValue}\r\n        />\r\n        <FlipMove duration={300} easing=\"linear\">\r\n          {listItems}\r\n        </FlipMove>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TodoList;\r\n","//import logo from './logo.svg';\n//import \"./App.css\";\nimport TodoList from \"./components/todoList\";\n\nfunction App() {\n  return (\n    <>\n      <TodoList />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}